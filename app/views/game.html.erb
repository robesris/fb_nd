<style>
  .row {
    clear: both;
  }

  .left {
    float: left;
  }

  .clear {
    clear: both;
  }

  .draft_piece {
     min-width: 70px;
   }

  .piece {
    min-width: 70px;
    font-size: 10px;
  }

  .keep_space {
    width: 60px;
    height: 75px;
    border: 1px solid #CCCCCC;
    margin-bottom: 10px;
  }

  .board_space {
    width: 60px;
    height: 75px;
    border: 1px solid;
    border-color: #000000;
  }

  body {
    font-size: 8px;
  }

  #left_section {
    max-width: 50%;
  }

  #draft_section {
    max-width: 50%;
  }
</style>

<%= link_to "New Game", create_game_path %>

<% if @game %>
  <div>Code: <%= @game.code %></div>
  <div>Player Secret: <%= @me.secret %></div>

  <%= button_to "Ready", ready_path(@game.code, @me.secret), :remote => true, :id => 'ready_button', :form => { :id => 'ready_button_form'} %>

  <%= form_for @game do |f| %>
    <%= hidden_field_tag :player, "player#{@me.num}" %>
    <%= hidden_field_tag :my_secret, @me.secret %>
    <%= hidden_field_tag :phase, @game.phase %>

    <%= f.radio_button :active_player, :go_first %>Go first

    <%#= button_tag "Ready", :type => :button %>
    <%= link_to "Start", join_game_path(:game_code => @game_code, :player_secret => @player_secret) %>

    Player 1 Crystals:<span id="crystals_1"><%= @game.player1.crystals %></span><br />
    Player 2 Crystals:<span id="crystals_2"><%= @game.player2.crystals %></span>

    <div id="left_section" class="left">

      <div id='draft_section' class=''>
      <% @all_piece_klasses.each do |klass| %>
        <div id="draft_<%= klass.to_s.downcase %>" name="<%= klass.to_s %>" class="left draft_piece<%= klass < Piece::Nav ? ' nav' : '' %>"><div><%= klass.to_s %></div><img src='/assets/<%= klass.to_s.downcase %>_1.gif' width='50%' height='50%' /></div>
      <% end %>
    </div>
    <br />
    <% 1.upto(2) do |pnum| %>
      <div id="keep_<%= pnum %>" name="keep" class="row">
        <% 1.upto(7) do |n| %>
          <div id="keep_<%= pnum %>_<%= n %>" class="keep_space left">
            P<%= pnum %>K<%= n %>
            <% if piece = @game.playernum(pnum).keep[n - 1].piece %>
              <% klass = piece.class %>
              <div id='<%= piece.unique_name %>' name='<%= piece.name %>' data-owner='<%= piece.player.num %>' class='piece player<%= pnum %>'><%= piece.name %>
                <img src='/assets/<%= klass.to_s.downcase %>_1.gif' width='50%' height='50%' />
              </div>
            <% end %>
          </div>
        <% end %>
      </div>
    <% end %>

      </div>


    <div class="left">
      <% 7.downto(1) do |row| %>
        <div class="row">
          <% 'a'.upto('g') do |col| %>
            <div class="col left">
              <div id='space_<%= col + '_' + row.to_s %>' class='board_space<%= " nav_space" if (row == 1 || row == 7) && col== "d" %>'>
                <%= col + '_' + row.to_s %>
                <% if piece = @game.board.space(col, row).piece %>
                  <% klass = piece.class %>
                  <div id='<%= piece.unique_name %>' name='<%= piece.name %>' data-owner='<%= piece.player.num %>' class='player<%= piece.player.num %> piece<%= klass < Piece::Nav ? ' nav' : '' %>'>
                    P<%= piece.player.num %>
                    <img src='/assets/<%= klass.to_s.downcase %>_1.gif' width='50%' height='50%' />
                  </div>
                <% end %>
              </div>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>

    
  <% end %>

<% end %>

<script>
  $(function() {
    var me = function() {
      return $('#player').val();
    };

    var opponent = function() {
      if ($('#player').val() == 'player1') {
        return 'player2';
      } else {
        return 'player1';
      }
    }

    var playernum = function(player) {
      return player == 'player1' ? 1 : 2
    }

    var occupied = function(space) {
      return space.find('div[class~="piece"]').length > 0;
    }

    var in_keep = function(piece) {
    
      //alert( piece.parent().parent().attr('name'));
      //alert( piece.parent().parent().attr('name') == 'keep');
      return piece.parent().parent().attr('name') == 'keep';
    }

    var draft = function(player, new_piece, keep_space, result) {
      // All logic should be server side - this just does stuff.
      new_piece.addClass(player).addClass('piece').removeClass('draft_piece').attr('data-owner', playernum(player)).attr('id', result['piece_unique_name']);
      console.log(new_piece);
      new_piece.css('left', 0).css('top', 0).draggable();
      if (player == 'player2') {
        new_piece.find('img').attr('src', '/assets/' + new_piece.attr('name').toLowerCase() + '_2.gif');
      }
      $( keep_space ).addClass( "ui-state-highlight" ).append(new_piece);
    }

    var move = function(piece, space, result) {
      space.append(piece.css('top', '0px').css('left', '0px'));
      piece.css('top', '0px').css('left', '0px');
      //piece.remove();
      //piece.appendTo(space);
      if (result) {
        $('#crystals_1').text(result['p1_crystals']);
        $('#crystals_2').text(result['p2_crystals']);
      }
    }

    var play_phase = function() {
      $('#phase').val('play');  // Just a temporary stopgap?  Should probably be handled in a more robust way.

      $( ".board_space" ).droppable({
        drop: function( event, ui ) {
          var piece = $(ui.draggable);
          var space = $('#' + this.id);
                  
          if (!occupied(space)) {
            // summon, move, other?
            if (in_keep(piece)) {
              // handle as summon
              console.log("SUMMONING");
              $.ajax({
                url: '/game/<%= @game_code %>/<%= @player_secret %>/summon/' + piece.attr('id') + '/' + this.id,
                success: function (result) {
                  if (result['status'] == 'success') {
                    //piece.draggable({ disable: true, revert: false });
                    move(piece, space, result);
                  }
                }
              });
            } else {
              // handle as move
              $.ajax({
                url: '/game/<%= @game_code %>/<%= @player_secret %>/move/' + piece.attr('id') + '/' + this.id,
                success: function (result) {
                  if (result['status'] == 'success') {
                    move(piece, space, result);
                  }
                } 
              });
            }
          };
          piece.css('top', '0px').css('left', '0px');
        }
      });
    }


    $('#ready_button_form').bind("ajax:complete", function(xhr, status) {
      $('#draft_section').hide();
      play_phase();
    });

    $('.draft_piece, .piece').draggable({ revert: true, snap: false });
    $( ".keep_space, .nav_space" ).droppable({
      drop: function( event, ui ) {
        var piece = $(ui.draggable);
        var space = $('#' + this.id);
                
        if (!occupied(space)) {        
          $.ajax({
            url: '/game/<%= @game_code %>/<%= @player_secret %>/draft/' + piece.attr('name') + '/' + this.id,
            success: function (result) {
              if (result['status'] == "success") {
                var new_piece = piece.clone();
                draft(me(), new_piece, space, result);
              } else {
                console.log(result);
              }
            } 
          });
        }
      } 
      
    });

    // Enable board spaces
    if ($('#phase').val() == 'play') {
      play_phase();
    }

    // Check for new events from the other player periodically
    var checkForEvents = function() {
      $.ajax({
        url: '/game/<%= @game_code %>/<%= @player_secret %>/events',
        success: function(events) {
          console.log(events);
          processEvents(events);
        },
        complete: function() {
          setTimeout(checkForEvents, 1000);
        }
      });
    };

    var processEvents = function(events) {
      for(i = 0; i < events.length; i++) {
        event = events[i];
        console.log(event.action);
        switch(event.action)
        {
          case 'draft':
            var draft_piece = $('#draft_' + event.options.piece_name.toLowerCase());
            var new_piece = draft_piece.clone();
            draft(opponent(), new_piece, $('#' + event.to), { piece_unique_name: event.piece_unique_name });
            break;
          case 'summon':
            var piece = $('#' + event.piece_unique_name);
            var space = $('#' + event.to);
            move(piece, space, null)
            break;
          case 'move':
            var piece = $('#' + event.piece_unique_name);
            var space = $('#' + event.to);
            move(piece, space, event.options)
            break;
        }
      }
    };

    // We've just loaded the page, so clear events since we're already displaying the board state
    $.ajax({
      url: '/game/<%= @game_code %>/<%= @player_secret %>/init',
      complete: function() {
        checkForEvents();
      }
    });
  });
</script>
